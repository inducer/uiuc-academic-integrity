grist_root_url: "https://scicomp-grist.cs.illinois.edu"
grist_doc_id: s7VzXiAHXbwgivucYprb6z

query: |
    select *
    from Cases
    inner join Case_participants on Case_participants."Case" = Cases.id
    inner join Persons on Persons.id = Case_participants.Person
    left outer join Conflict_reports on (
        Conflict_reports.Person = Persons.id
        and Conflict_reports."Case" = Cases.id)
        and Conflict_reports.Request_type = 'Direct')
    where Cases.Hearing_start > unixepoch()
    and substr(Cases.State, 1, 1) <> '0'
    and Case_participants.Role in ('Chair', 'Faculty', 'Backup Faculty', 'Student member', 'Backup student')
    and Conflict_reports."Case" is null

to:
-
    name: "{{ Full_name }}"
    email: "{{ Email }}"

cc:
- 
    name: Andreas Kloeckner
    email: andreask@illinois.edu

subject: |

    Conflict Check for FAIR{{ CaseID }} [NEW PROCESS]

body: |

    {{ First_name }},

    I am assembling a committee to hear an appeal for FAIR{{ CaseID }}.
    Could you please check whether you have a (potential) conflict of interest
    with the following?

    {{ Appellants }}

    NEW: Please use the following link to report this information:

    https://scicomp-apps.cs.illinois.edu/form/conflict/{{ inserted_Conflict_reports_0_Key }}

    Detailed instructions are located at the link.
    Please provide your response by {{ inserted_Conflict_reports_0_Response_deadline | format_timestamp("%B %d %I:%M %p") }}
    at the latest.

    Please DISREGARD earlier requests for emailed information, if any.
    Unless you encounter issues with the form, there is no need to send
    email.

    Thanks!

    Andreas
    Chair, CS Academic Appeals

insert:
-
    table: Conflict_reports
    fields:
        Case: id
        Person: Person
        Key: |
            from random import randrange
            "".join(chr(97+int(randrange(0, 26))) for i in range(20))
        Response_deadline: |

            from date_utils import advance_deadline
            advance_deadline(None, 2, 1)
        Last_nag: |
            from time import time
            time()
        Nag_count: 1
        Request_type: "Direct"
            
